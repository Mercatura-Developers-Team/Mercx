type Account = record { owner : principal; subaccount : opt blob };
type Approve = record {
  fee : opt nat;
  from : Account;
  memo : opt blob;
  created_at_time : opt nat64;
  amount : nat;
  expected_allowance : opt nat;
  expires_at : opt nat64;
  spender : Account;
};
type Burn = record {
  from : Account;
  memo : opt blob;
  created_at_time : opt nat64;
  amount : nat;
  spender : opt Account;
};
type GetTransactions = record {
  balance : nat;
  transactions : vec TransactionWithId;
  oldest_tx_id : opt nat;
};
type Mint = record {
  to : Account;
  memo : opt blob;
  created_at_time : opt nat64;
  amount : nat;
};
type Result = variant { Ok : nat; Err : text };
type Result_1 = variant { Ok : GetTransactions; Err : text };
type Result_2 = variant { Ok : TransactionResponse; Err : text };
type Result_3 = variant { Ok : text; Err : text };
type Transaction = record {
  burn : opt Burn;
  kind : text;
  mint : opt Mint;
  approve : opt Approve;
  timestamp : nat64;
  transfer : opt Transfer;
};
type TransactionResponse = record {
  first_index : nat;
  log_length : nat;
  transactions : vec Transaction;
};
type TransactionWithId = record { id : nat; transaction : Transaction };
type Transfer = record {
  to : Account;
  fee : opt nat;
  from : Account;
  memo : opt blob;
  created_at_time : opt nat64;
  amount : nat;
  spender : opt Account;
};
type TransferArgs = record { to_account : Account; amount : nat };
service : {
  check_balance_icp : (Account) -> (nat);
  check_balance_mercx : (Account) -> (nat);
  deposit_icp_in_canister : (nat64) -> (Result);
  get_account_transactions : (Account, opt nat, nat) -> (Result_1);
  get_logo_url : () -> (text);
  get_token_name : () -> (text);
  get_transactions : (nat, nat) -> (Result_2);
  send_mercx : (nat64) -> (Result);
  swap : (nat64) -> (Result_3);
  transfer : (TransferArgs) -> (Result);
  transfer_from : (TransferArgs) -> (Result);
  whoami : () -> (principal) query;
}
